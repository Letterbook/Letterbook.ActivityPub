name: Build

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - 'main'
      - 'test-artifacts'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
#      Setup
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Setup GitTools
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        
#        Lint, Test, Build
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build Letterbook.ActivityPub.sln
      - name: Test
        run: dotnet test Letterbook.ActivityPub.sln --collect:"XPlat Code Coverage" --results-directory "coverage"
      - name: Code Coverage Report
#        TODO: We may want to fork these 3rd party actions
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
      - name: Package for Nuget
        run: 'dotnet pack Letterbook.ActivityPub -p:PackageVersion=$PACKAGE_VERSION -o ./'
        env: 
          PACKAGE_VERSION: ${{steps.gitversion.outputs.nuGetVersionV2}}
      - name: Store Nupkg
        uses: actions/upload-artifact@v3
        with:
          name: nupkg
          path: ./*.nupkg
          if-no-files-found: error
          retention-days: 7
      - name: Save test result artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: coverage
        # Even if the tests fail - publish the results
        if: always()
